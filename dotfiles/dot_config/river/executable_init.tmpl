#!/bin/sh

#-----------------------------------------------------#
#                      SETTINGS                       #
#-----------------------------------------------------#

launcher="fuzzel --placeholder Launching..."
clip="cliphist list | fuzzel --dmenu --with-nth 2 | cliphist decode | wl-copy"
terminal="alacritty"
browser="firefox"
mail="thunderbird"
filemgr="$terminal --class yazi --title Yazi --command zsh -ic yazi"

riverctl set-repeat 50 300
riverctl keyboard-layout -variant intl us
riverctl hide-cursor timeout 5000

#-----------------------------------------------------#
#                      LOOK                           #
#-----------------------------------------------------#

riverctl background-color 0x002b36
riverctl border-color-focused 0x93a1a1
riverctl border-color-unfocused 0x586e75

#-----------------------------------------------------#
#                      LAYOUT                         #
#-----------------------------------------------------#

riverctl default-attach-mode bottom
riverctl default-layout rivertile
rivertile="rivertile -view-padding 6 -outer-padding 6"

#-----------------------------------------------------#
#                      BINDS                          #
#-----------------------------------------------------#

# Use "Super" (= Windows, logo key) as the primary modifier
mod="Super"

# Super+Shift+E = exit river
riverctl map normal $mod+Shift E exit

# Super+Control+R = reload config
riverctl map normal $mod+Control R spawn "${HOME}/.config/river/init && notify-send -t 5000 -a System 'River' 'Config reloaded'"

# Super+Return = start terminal
riverctl map normal $mod Return spawn "$terminal"

# Super+E = start file manager
riverctl map normal $mod E spawn "$filemgr"

# Super+Space = start launcher
riverctl map normal $mod Space spawn "$launcher"

# Super+Shift+C = start clipboard manager
riverctl map normal $mod+Shift C spawn "$clip"

# Print               = print with grim
# Control+Print       = capture screen
# Control+Shift+Print = capture area
riverctl map normal None Print spawn "${HOME}/.local/bin/grim-capture-all"
riverctl map normal Control Print spawn "${HOME}/.local/bin/grim-capture-screen"
riverctl map normal Control+Shift Print spawn "${HOME}/.local/bin/grim-capture-area"

# Super+W = close the focused view
riverctl map normal $mod W close

# Super+L and Super+H to focus the next/previous view in the layout stack
riverctl map normal $mod L focus-view next
riverctl map normal $mod H focus-view previous

# Super+Shift+L and Super+Shift+H to swap the focused view with the next/previous
# view in the layout stack
riverctl map normal $mod+Shift L swap next
riverctl map normal $mod+Shift H swap previous

# Super+Period and Super+Comma to focus the next/previous output
riverctl map normal $mod Period focus-output next
riverctl map normal $mod Comma focus-output previous

# Super+Shift+{Period,Comma} to send the focused view to the next/previous output
riverctl map normal $mod+Shift Period send-to-output next
riverctl map normal $mod+Shift Comma send-to-output previous

# Super+Shift+Return to bump the focused view to the top of the layout stack
riverctl map normal $mod+Shift Return zoom

# Super+J and Super+K to decrease/increase the main ratio of rivertile(1)
riverctl map normal $mod J send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal $mod K send-layout-cmd rivertile "main-ratio +0.05"

# Super+Shift+J and Super+Shift+K to increment/decrement the main count of rivertile(1)
riverctl map normal $mod+Shift J send-layout-cmd rivertile "main-count +1"
riverctl map normal $mod+Shift K send-layout-cmd rivertile "main-count -1"

# Super+Alt+{H,J,K,L} to move views
riverctl map normal $mod+Alt H move left 100
riverctl map normal $mod+Alt J move down 100
riverctl map normal $mod+Alt K move up 100
riverctl map normal $mod+Alt L move right 100

# Super+Alt+Control+{H,J,K,L} to snap views to screen edges
riverctl map normal $mod+Alt+Control H snap left
riverctl map normal $mod+Alt+Control J snap down
riverctl map normal $mod+Alt+Control K snap up
riverctl map normal $mod+Alt+Control L snap right

# Super+Alt+Shift+{H,J,K,L} to resize views
riverctl map normal $mod+Alt+Shift H resize horizontal -100
riverctl map normal $mod+Alt+Shift J resize vertical 100
riverctl map normal $mod+Alt+Shift K resize vertical -100
riverctl map normal $mod+Alt+Shift L resize horizontal 100

# Super + Left Mouse Button to move views
riverctl map-pointer normal $mod BTN_LEFT move-view

# Super + Right Mouse Button to resize views
riverctl map-pointer normal $mod BTN_RIGHT resize-view

# Super + Middle Mouse Button to toggle float
riverctl map-pointer normal $mod BTN_MIDDLE toggle-float

# Super+Space to toggle float
#riverctl map normal $mod Space toggle-float

# Super+F to toggle fullscreen
riverctl map normal $mod F toggle-fullscreen

# Super+{Up,Right,Down,Left} to change layout orientation
riverctl map normal $mod Up send-layout-cmd rivertile "main-location top"
riverctl map normal $mod Right send-layout-cmd rivertile "main-location right"
riverctl map normal $mod Down send-layout-cmd rivertile "main-location bottom"
riverctl map normal $mod Left send-layout-cmd rivertile "main-location left"

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked; do
  # Eject the optical drive (well if you still have one that is)
  riverctl map $mode None XF86Eject spawn 'eject -T'

  # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
  riverctl map $mode None XF86AudioRaiseVolume spawn 'pamixer -i 5'
  riverctl map $mode None XF86AudioLowerVolume spawn 'pamixer -d 5'
  riverctl map $mode None XF86AudioMute spawn 'pamixer --toggle-mute'

  # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
  riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
  riverctl map $mode None XF86AudioPlay spawn 'playerctl play-pause'
  riverctl map $mode None XF86AudioPrev spawn 'playerctl previous'
  riverctl map $mode None XF86AudioNext spawn 'playerctl next'

  # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
  riverctl map $mode None XF86MonBrightnessUp spawn 'brightnessctl set +5%'
  riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done

#-----------------------------------------------------#
#                      TAGS                           #
#-----------------------------------------------------#

for i in $(seq 1 9); do
  tags=$((1 << ($i - 1)))

  # Super+[1-9] to focus tag [0-8]
  riverctl map normal $mod $i set-focused-tags $tags

  # Super+Shift+[1-9] to tag focused view with tag [0-8]
  riverctl map normal $mod+Shift $i set-view-tags $tags

  # Super+Control+[1-9] to toggle focus of tag [0-8]
  riverctl map normal $mod+Control $i toggle-focused-tags $tags

  # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
  riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done

# Super+0 to focus all tags
# Super+Shift+0 to tag focused view with all tags
all_tags=$(((1 << 32) - 1))
riverctl map normal $mod 0 set-focused-tags $all_tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags

## Scratchpad tags
scratchpad="${HOME}/.config/river/scripts/scratchpads.sh"
chat_tag=$((1 << 12))

#-----------------------------------------------------#
#                      RULES                          #
#-----------------------------------------------------#

# Spawn to
riverctl rule-add -app-id "firefox" tags $((1 << (2 - 1)))
riverctl rule-add -app-id "thunderbird" tags $((1 << (3 - 1)))
riverctl rule-add -app-id "libreoffice-*" tags $((1 << (4 - 1)))
riverctl rule-add -title "LibreOffice" tags $((1 << (4 - 1)))
riverctl rule-add -app-id "soffice" tags $((1 << (4 - 1)))
riverctl rule-add -app-id "org.pwmt.zathura" tags $((1 << (4 - 1)))
riverctl rule-add -app-id "Signal" tags $((1 << (5 - 1)))
riverctl rule-add -app-id "discord" tags $((1 << (5 - 1)))
riverctl rule-add -app-id "com.discordapp.Discord" tags $((1 << (5 - 1)))
riverctl rule-add -app-id "vesktop" tags $((1 << (5 - 1)))
riverctl rule-add -app-id "imv" tags $((1 << (6 - 1)))
riverctl rule-add -app-id "mpv" tags $((1 << (6 - 1)))
riverctl rule-add -app-id "steam" tags $((1 << (6 - 1)))
riverctl rule-add -app-id "remote-viewer" tags $((1 << (7 - 1)))
riverctl rule-add -app-id "KeePass2" tags $((1 << (9 - 1)))

# Floaters
riverctl rule-add -app-id "yazi" float
riverctl rule-add -app-id "firefox" -title "About Mozilla Firefox" float
riverctl rule-add -app-id "firefox" -title "Library" float
riverctl rule-add -app-id "firefox" -title "Picture-in-Picture" float
riverctl rule-add -app-id "thunderbird" -title "Enter your password*" float
riverctl rule-add -app-id "steam" float
riverctl rule-add -app-id "KeePass2" -title "Open Database*" float
riverctl rule-add -title "Open Database File" float # KeePass2
riverctl rule-add -app-id "nm-connection-editor" float

# Fullscreen
riverctl rule-add -app-id "imv" fullscreen
riverctl rule-add -app-id "mpv" fullscreen

#-----------------------------------------------------#
#                      START                          #
#-----------------------------------------------------#

dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=river

executes="waybar mako swaybg wl-paste"

for execute in $executes; do
  pidof -q "$execute" && continue
  case $execute in
  "wl-paste")
    "$execute" --watch cliphist -max-items 100 store &
    ;;
  "swaybg")
    "$execute" -m fill -i "${HOME}/Pictures/wallpapers/arch.png" &
    ;;
  "swayidle")
    "$execute" -w &
    ;;
  *)
    "$execute" &
    ;;
  esac
done >/dev/null 2>&1

pkill -x rivertile
$rivertile &
